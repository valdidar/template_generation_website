         <li class="">
        <a class="register" href="/logout">logout</a>
      </li>
    </ul>
    </div>
  </nav>
<div class="container">
{{!-- now in version 4, i want to make html template, where i can have headings from h1 to h6, i can have paragraph with p tag,
as i take these input from different input elements, i also want to visualise the output by showing the html in a small screen --}}
<label class="heading" for="name">Enter the name of the template:</label>
<input class="heading" type="text" id="name" name="name" placeholder="Your name..">
<h4 class="subsubheading">Note: Simply include variables in your template using ${sample variable} syntax for easy customization!</h4>
<div class="new-template">
    <div class="leftpart">
        {{!-- this holds the output screen --}}
        <div class="whitescreen"></div>
        {{!-- this holds the final submit button to save the html with name of the file --}}
        <form action="" onsubmit="submitForm()">
            <input class="down submit" type="submit" value="Submit">
        </form>
    </div>
    <div class="rightpart">
        {{!-- add heading --}}
        <form action="" onsubmit="insertHeading()">
            <label class="down subheading" for="heading-tags">Enter heading</label>
            {{!-- choose size of heading from h1 to h6 --}}
            <select class="down" name="heading-tags" id="heading">
                <option value="h1">h1</option>
                <option value="h2">h2</option>
                <option value="h3">h3</option>
                <option value="h4">h4</option>
                <option value="h5">h5</option>
                <option value="h6">h6</option>
            <input class="down" type="text" id="heading-value" name="heading" placeholder="Your heading..">
            <input class="down submit" type="submit" value="Insert" onclick="">
        </form>
        {{!-- adding paragraph --}}
        <form action="" onsubmit="insertParagraph()">
            <label class="down subheading" for="paragraph">Enter plaintext</label>
            <input class="down" type="text" id="paragraph" name="paragraph" placeholder="Your paragraph..">
            <input class="down submit" type="submit" value="Insert" onclick="">
        </form>
        {{!-- adding a horizontal line --}}
        <form action="" onsubmit="insertHorizontalLine()">
            <label class="down subheading" for="horizontal-line">Add horizontal line</label>
            <input class="down submit" type="submit" value="Insert" onclick="">
        </form>
        {{!-- create a costom size table just below, add element directly in table, detect all the text in table and then insert in whitescreen --}}
        <form action="" onsubmit="createEmptyTable()">
            <label class="down subheading" for="table">Add table</label>
            <input class="down" type="number" id="table-rows" name="table-rows" placeholder="Enter number of rows..">
            <input class="down" type="number" id="table-columns" name="table-columns" placeholder="Enter number of columns..">
            <input class="down submit" type="submit" value="Insert" onclick="">
        </form>
        <div class="fillingEmptyTable" id="table" ></div>
        <div class="fillingEmptyTableSubmit"></div>
        
    </div>
</div>
</div>
<script>
    //add name to input if name is not empty
    if ("{{name}}" != ""){
        document.getElementById("name").value = "{{name}} copy";
        // change Enter the name of the template: to Edit the name of the template:
        document.getElementsByClassName("heading")[0].innerHTML = "Edit the name of the template:"; 
    }
    
    //add the previous html to the whitescreen if it is not empty
    if("{{text}}" != ""){
    previousHtml= "{{text}}";
        const parser = new DOMParser();
        const decodedText = parser.parseFromString(`<!doctype html><body>${previousHtml}`, "text/html").body.textContent;
        console.log(decodedText);
        document.getElementsByClassName("whitescreen")[0].innerHTML = decodedText;
    }
</script>
<script src="../new-template-script.js"></script>